{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","timerId","handleDocument","setState","this","window","setInterval","clearInterval","document","removeEventListener","className","props","name","Component","getRandomName","value","Math","random","toString","slice","App","clockName","hasClock","randomName","addEventListener","event","preventDefault","_prevProps","prevState","console","log","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,QAAU,EALZ,EAoBEC,eAAiB,WACf,IAAMJ,GAAO,IAAIC,MAAOC,qBAExB,EAAKG,SAAS,CAAEL,UAvBpB,uDAOE,WAAqB,IAAD,OAClBM,KAAKH,QAAUI,OAAOC,aAAY,WAChC,IAAMR,GAAO,IAAIC,MAAOC,qBAExB,EAAKG,SAAS,CAAEL,WACf,OAZP,kCAeE,WACEO,OAAOE,cAAcH,KAAKH,SAC1BO,SAASC,oBAAoB,cAAeL,KAAKF,kBAjBrD,oBA0BE,WACE,OACE,sBAAKQ,UAAU,QAAf,UACE,iCACGN,KAAKO,MAAMC,OAEb,YACD,+BACGR,KAAKP,MAAMC,cAlCtB,GAA2Be,aCL3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEvB,MAAQ,CACNwB,UAAWP,IACXQ,UAAU,GAHd,EAMEC,WAAa,EANf,uDAQE,WAAqB,IAAD,OAClBnB,KAAKmB,WAAalB,OAAOC,aAAY,WACnC,EAAKH,SAAS,CAAEkB,UAAWP,QAC1B,MAEHN,SAASgB,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKvB,SAAS,CAAEmB,UAAU,OAG5Bd,SAASgB,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEmB,UAAU,SAnBhC,gCAuBE,SAAmBK,EAAqBC,GAEtCC,QAAQC,IAAR,uBAA4BF,EAAUP,UAAtC,eAAsDjB,KAAKP,MAAMwB,cAzBrE,oBA4BE,WACE,OACE,sBAAKX,UAAU,MAAf,UACE,6CACCN,KAAKP,MAAMyB,UAAY,cAAC,EAAD,CAAOV,KAAMR,KAAKP,MAAMwB,mBAhCxD,GAAyBR,aCbzBkB,IAASC,OACP,cAAC,EAAD,IACAxB,SAASyB,eAAe,W","file":"static/js/main.0976e456.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const date = new Date().toLocaleTimeString();\n\n      this.setState({ date });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.handleDocument);\n  }\n\n  handleDocument = () => {\n    const date = new Date().toLocaleTimeString();\n\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong>\n          {this.props.name}\n        </strong>\n        {' time is '}\n        <span>\n          {this.state.date}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: getRandomName(),\n    hasClock: true,\n  };\n\n  randomName = 0;\n\n  componentDidMount() {\n    this.randomName = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentDidUpdate(_prevProps: unknown, prevState: { clockName: unknown; }) {\n    // eslint-disable-next-line no-console\n    console.log(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}